{"version":3,"sources":["services/Api.js","components/pages/MoviePage.module.css","components/navigation/AddNav.js","components/pages/MoviePage.js","components/movieDetailsPage/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","fetchTrending","a","get","process","movies","console","log","fetchMovie","id","movie","fetchCast","casts","fetchReviews","reviews","fetchQueryMovies","query","queryMovies","module","exports","activeStyle","color","fontWeight","withRouter","location","className","styles","container","list","to","pathname","state","from","exact","Cast","lazy","Reviews","genres","match","onBack","button","onClick","image","alt","src","poster_path","info","title","vote_average","overview","join","fallback","Loader","path","render","props","MovieDetailsPage","getMovie","params","findId","data","map","genre","name","setState","handleClickButton","history","undefined","search","push","this","Component"],"mappings":"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","file":"static/js/6.570bb473.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\n// const key = '0ccd4bf2259c8c1465114b232f00f305';\r\n\r\nexport const fetchTrending = async () => {\r\n  try {\r\n    const movies = await axios.get(\r\n      `/trending/movie/day?api_key=${process.env.REACT_APP_UNIQUE_KEY}`,\r\n    );\r\n\r\n    return movies;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// \"https://api.themoviedb.org/3/movie/582596?api_key=0ccd4bf2259c8c1465114b232f00f305&language=en-US\"\r\n\r\nexport const fetchMovie = async id => {\r\n  try {\r\n    const movie = await axios.get(\r\n      `/movie/${id}?api_key=${process.env.REACT_APP_UNIQUE_KEY}&language=en-US`,\r\n    );\r\n\r\n    return movie;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCast = async id => {\r\n  try {\r\n    const casts = await axios.get(\r\n      `/movie/${id}/credits?api_key=${process.env.REACT_APP_UNIQUE_KEY}`,\r\n    );\r\n    return casts;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\r\n\r\nexport const fetchReviews = async id => {\r\n  try {\r\n    const reviews = await axios.get(\r\n      `/movie/${id}/reviews?api_key=${process.env.REACT_APP_UNIQUE_KEY}&language=en-US&page=1`,\r\n    );\r\n    return reviews;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n\r\nexport const fetchQueryMovies = async query => {\r\n  try {\r\n    const queryMovies = await axios.get(\r\n      `search/movie?api_key=${process.env.REACT_APP_UNIQUE_KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\r\n    );\r\n    return queryMovies;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MoviePage_container__3dB8i\",\"image\":\"MoviePage_image__2ZB3J\",\"info\":\"MoviePage_info__1vHbv\",\"button\":\"MoviePage_button__2ZU5x\",\"title\":\"MoviePage_title__3Gg0L\"};","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport styles from './Nav.module.css';\r\n\r\nconst activeStyle = {\r\n  color: 'palevioletred',\r\n  fontWeight: 'bold',\r\n};\r\n\r\nconst AddNav = ({ id, location }) => (\r\n  <ul className={styles.container}>\r\n    <li className={styles.list}>\r\n      <NavLink\r\n        to={{\r\n          pathname: `/movies/${id}/cast`,\r\n          state: { from: location.pathname },\r\n        }}\r\n        exact\r\n        activeStyle={activeStyle}>\r\n        Cast\r\n      </NavLink>\r\n    </li>\r\n    <li className={styles.list}>\r\n      <NavLink\r\n        to={{\r\n          pathname: `/movies/${id}/reviews`,\r\n          state: { from: location.pathname },\r\n        }}\r\n        activeStyle={activeStyle}>\r\n        Reviews\r\n      </NavLink>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default withRouter(AddNav);\r\n","import React, { lazy, Suspense } from 'react';\r\nimport AddNav from '../navigation/AddNav';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport Loader from './Loader';\r\nimport styles from './MoviePage.module.css';\r\n\r\nconst Cast = lazy(() => import('./Cast'));\r\n\r\nconst Reviews = lazy(() =>\r\n  import('./Reviews'),\r\n);\r\n\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\nconst MoviePage = ({ movie, genres, match, onBack }) => (\r\n  <>\r\n    <button className={styles.button} onClick={onBack}>\r\n      Go to back\r\n    </button>\r\n    <div className={styles.container}>\r\n      <div className={styles.image}>\r\n        <img alt=\"film\" src={imageUrl + `${movie.poster_path}`} />\r\n      </div>\r\n      <div className={styles.info}>\r\n        <h1>{movie.title}</h1>\r\n        <p>User score: {movie.vote_average * 10}%</p>\r\n        <h3>Overview</h3>\r\n        <p>{movie.overview}</p>\r\n        <h3>Genres</h3>\r\n        <p>{genres.join(' ')}</p>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <h2 className={styles.title}>Additional information</h2>\r\n      <AddNav id={movie.id} />\r\n      <Suspense fallback={<Loader />}>\r\n        <Switch>\r\n          <Route\r\n            path={`${match.path}/cast`}\r\n            render={props => <Cast {...props} id={movie.id} />}\r\n          />\r\n          <Route\r\n            path={`${match.path}/reviews`}\r\n            render={props => <Reviews {...props} id={movie.id} />}\r\n          />\r\n        </Switch>\r\n      </Suspense>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default withRouter(MoviePage);\r\n","import React, { Component } from 'react';\r\nimport { fetchMovie } from '../../services/Api';\r\nimport MoviePage from '../pages/MoviePage';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n    genres: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovie();\r\n    this.setState({\r\n      from: this.props.location.state.from,\r\n      search: this.props.location.state.search,\r\n    });\r\n  }\r\n\r\n  getMovie = async () => {\r\n    try {\r\n      const findId = props => props.match.params.id;\r\n      const id = findId(this.props);\r\n      const movie = await fetchMovie(id);\r\n      const genres = movie.data.genres.map(genre => genre.name + ' ');\r\n      this.setState({ genres: genres, movie: movie.data });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleClickButton = () => {\r\n    const { history } = this.props;\r\n    if (this.state.search !== undefined) {\r\n      history.push({\r\n        pathname: this.state.from,\r\n        search: `query=${this.state.search}`,\r\n      });\r\n    } else {\r\n      history.push('/');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movie, genres } = this.state;\r\n    return (\r\n      <>\r\n        <MoviePage\r\n          genres={genres}\r\n          movie={movie}\r\n          onBack={this.handleClickButton}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}